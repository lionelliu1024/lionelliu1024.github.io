[{"content":"","permalink":"https://blog.juanliu.top/posts/tech/tech1/","summary":"","title":"Tech1"},{"content":"mermaid graph TD; A--\u0026gt;B; A--\u0026gt;C; B--\u0026gt;D; C--\u0026gt;D; mermaid classDiagram class A{ \u0026lt;\u0026lt;interface\u0026gt;\u0026gt; } class B{ \u0026lt;\u0026lt;interface\u0026gt;\u0026gt; } A --\u0026gt; B 21 22 23 24 25 aaaa bbbb bbbaa sss 1 2 3 4 5 6 7 fn main() { another_function(5); } fn another_function(x: i32) { println!(\u0026#34;The value of x is: {}\u0026#34;, x); } 1 2 3 4 5 6 7 fn main() { another_function(5); } fn another_function(x: i32) { println!(\u0026#34;The value of x is: {}\u0026#34;, x); } ","permalink":"https://blog.juanliu.top/d1emo/","summary":"mermaid graph TD; A--\u0026gt;B; A--\u0026gt;C; B--\u0026gt;D; C--\u0026gt;D; mermaid classDiagram class A{ \u0026lt;\u0026lt;interface\u0026gt;\u0026gt; } class B{ \u0026lt;\u0026lt;interface\u0026gt;\u0026gt; } A --\u0026gt; B 21 22 23 24 25 aaaa bbbb bbbaa sss 1 2 3 4 5 6 7 fn main() { another_function(5); } fn another_function(x: i32) { println!(\u0026#34;The value of x is: {}\u0026#34;, x); } 1 2 3 4 5 6 7 fn main() { another_function(5); } fn another_function(x: i32) { println!(\u0026#34;The value of x is: {}\u0026#34;, x); }","title":"demo"},{"content":"“自限性疾病”是一个非常重要的医学概念。这些年来，无论是医学科普工作者，还是卫生主管机构，一直在科普这个概念。\n简单来说，一些疾病有它自己的病程。这个过程不会无限扩大，就算没有特殊的针对病因本身的治疗，在人体免疫系统正常的运作下，通常疾病也会渐渐改善。\n01 自限性疾病很常见 实际上，每个人都跟自限性疾病打过交道。比如大家熟悉的上呼吸道感染（上感、感冒）和诺如病毒感染，就属于自限性疾病。得了这些常见的自限性疾病，患者需要走完整个病程，然后通常就好了。当然，如果得的是传染性的自限性疾病，要注意隔离防护。\n虽然常见的自限性疾病一般预后较好，但如果出现了较重的症状，也需要及时就诊。\n自限性疾病大多数是病毒感染。除了前面说的呼吸道感染和诺如病毒感染之外，还有甲肝、手足口病、水痘、病毒性脑膜炎、轮状病毒肠炎、流行性腮腺炎……以及大家较少接触到的登革热、寨卡病毒感染、军团菌肺炎等等。还有一些症状，比如急性砷化氢中毒导致的溶血，也具有自限性。\n02 自限性疾病一定会“没事”吗？ 虽然疾病本身在达到高峰之后就会逐渐平息。但这个过程会给人体带来挑战。我们一方面要认识到，患上常见的自限性疾病之后，大多数健康成年人通常不会出现严重的情况；另一方面也要看到，一些“弱者”会在这个过程当中面临比较凶险的状况。\n水痘： “多为自限性疾病，儿童患者症状和皮疹均较轻，成人患者症状较重，易并发水痘性肺炎。妊娠期感染水痘，可致胎儿畸形、早产或死胎。产前数日内患水痘，可发生新生儿水痘，病情常较严重。”\n手足口病： “绝大多数病例一周内痊愈，但少数重症病例可并发脑炎、心肌炎、肺水肿或肺出血，病情进展迅速，病死率高。”\n流感后肌炎（post-influenza myositis）： “本病为良性自限性疾病，预后好，多在1周左右自行恢复，但也有极少数呈急进发病甚至威胁生命的病例报道。”\n诺如病毒感染： “尽管诺如病毒感染主要表现为自限性疾病，但少数病例仍会发展成重症，甚至死亡。重症或死亡病例通常发生于高龄老人和低龄儿童。健康人感染诺如病毒后偶尔也会发展为重症。 ”\n上面只是摘录一些常见自限性疾病的个体差异情况。足见，自限性疾病本身就可能会给一部分患者带来严重的后果。\n虽然概率非常低，但几乎所有自限性疾病都有出现急性、重症的可能性。上面那些克制的文字，也许会让人觉得重症与病死案例只是“少数人的噩运”“与我无关”。但这一切真实存在。\n03 自限性疾病不需要治疗吗？ 在自限性疾病的治疗方面，对于引起疾病的病原体本身，往往缺乏特效药物。虽然是病毒感染，很多情况下也并不建议进行抗病毒治疗。\n常见自限性疾病的患者可以在家里静养休息，注意隔离防护，避免感染扩大，观察病程，等待痊愈。但症状较重时仍需要对症治疗，也就是针对症状本身的支持，以减轻患者痛苦，补充营养，保持体液平衡。对于少数重症并发症的防治，也非常重要。比如鄂木斯克出血热，就需要治疗相应的并发症，如肺炎、心力衰竭、细菌感染等。\n总结一下就是：注意防护，轻症居家；症状较重，需要就诊。\n无论是症状较轻在家观察，还是症状较重入院治疗，都要知道，疾病需要走完整个流程。诺如病毒是两三天，水痘在10天左右，病毒性脑膜炎是1-2周，急性砷化氢中毒导致的溶血一般24-72小时内自行停止。\n观察不会超过这个限期，治疗也不会缩短这个限期。病人常常会问：“怎么还没好？”时候没到，它就是不会好。\n04 流感是一种自限性疾病吗？ 最后再多说几句流感。\n流感跟“普通感冒”并不是一码事，它是由流感病毒导致的。和普通的上呼吸道感染相比，它的病程较长、症状较严重，也更容易引发严重的并发症等。\n和上面所述的很多疾病一样，流感也是一种自限性疾病。这一点，可能很多人在平时的生活都体会得到：感染了流感病毒，浑身酸痛，发几天烧，吃个退烧药，躺几天也就没事了。这同样是人体免疫系统展开正常工作，逐渐消除病毒，从而让人恢复健康。\n每年秋天进入流感季的时候，各地都会提供流感疫苗注射服务。及时接种疫苗，虽然不能让人100%免于流感病毒的感染，但一方面，可以在一定程度上形成保护，降低感染风险；另一方面，即使感染也可以极大地减轻症状，降低并发症的发生率，降低致死的可能性。\n对个人来说，及时接种疫苗，也许是最好的应对之道。\n","permalink":"https://blog.juanliu.top/posts/life/%E8%87%AA%E9%99%90%E6%80%A7%E7%96%BE%E7%97%85/","summary":"“自限性疾病”是一个非常重要的医学概念。这些年来，无论是医学科普工作者，还是卫生主管机构，一直在科普这个概念。 简单来说，一些疾病有它自己的病程。这个过程不会无限扩大，就算没有特殊的针对病因本身的治疗，在人体免疫系统正常的运作下，通常疾病也会渐渐改善。 01 自限性疾病很常见 实际上，每个","title":"自限性疾病"},{"content":"","permalink":"https://blog.juanliu.top/posts/blog/blog/","summary":"","title":"Blog"},{"content":"","permalink":"https://blog.juanliu.top/posts/life/life/","summary":"","title":"Life"},{"content":"","permalink":"https://blog.juanliu.top/posts/read/read/","summary":"","title":"Read"},{"content":"\u0026lt;div\u0026gt; 科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 \u0026lt;/div\u0026gt; ","permalink":"https://blog.juanliu.top/posts/tech/tech/","summary":"\u0026lt;div\u0026gt; 科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代","title":"Tech"},{"content":" juanliu\u0026#39;s Blog 个人笔记记录，若有帮助尚好 👉友链格式 名称： juanliu\u0026rsquo;s Blog 网址： https://juanliu.top 图标： https://juanliu.top/static/images/icon_juanliu.png 描述： 个人笔记记录，若有帮助尚好 👉友链申请要求 秉承互换友链原则、文章定期更新、不能有太多广告、个人描述字数控制在15字内\n","permalink":"https://blog.juanliu.top/links/","summary":"juanliu\u0026#39;s Blog 个人笔记记录，若有帮助尚好 👉友链格式 名称： juanliu\u0026rsquo;s Blog 网址： https://juanliu.top 图标： https://juanliu.top/static/images/icon_juanliu.png 描述： 个人笔记记录，若有帮助尚好 👉友链申请要求 秉承互换友链原则、文章定期更新、不能有太多广告、个人描述字数控制在15字内","title":"🤝友链"},{"content":"关于我\n英文名: Lionel Liu 职业: 程序员 毕业院校: 东北大学 爱好: 篮球，台球，LOL 经历: 国企划过水，互联网企业冲过浪，目前外企摸鱼 ","permalink":"https://blog.juanliu.top/about/","summary":"关于我 英文名: Lionel Liu 职业: 程序员 毕业院校: 东北大学 爱好: 篮球，台球，LOL 经历: 国企划过水，互联网企业冲过浪，目前外企摸鱼","title":"🙋🏻‍♂️关于"},{"content":"import requests import urllib from urllib import parse from flask import Flask, request,jsonify #import urllib.request # app=Flask(__name__) #初始化app # @app.route(\u0026#39;/\u0026#39;,methods=[\u0026#39;GET\u0026#39;, \u0026#39;POST\u0026#39;]) #建立路由 def handler(event, context): print(\u0026#34;mmmmmmmmmmmmmmmmmmmmmmmmmmm\u0026#34;) print(event) print(\u0026#39;mmmmmmmmmmmmmmmmmmmmmmmmmmm\u0026#39;) # if request.method == \u0026#39;GET\u0026#39;: # msg = request.args.get(\u0026#39;msg\u0026#39;) # print(msg) print(event) print(\u0026#39;--------------------------\u0026#39;) rev_lst = [] for v in event.keys(): rev_lst.append(v) if \u0026#39;payload\u0026#39; in rev_lst: is_onenet = 0 else: is_onenet = 1 if is_onenet == 1: print(\u0026#34;本次应发送post请求\u0026#34;) # r = requests.post(\u0026#34;http://124.237.76.85:59996/tl/l\u0026#34;, data={\u0026#39;number\u0026#39;: event[\u0026#39;key1\u0026#39;], \u0026#39;type\u0026#39;: event[\u0026#39;key2\u0026#39;], \u0026#39;action\u0026#39;: \u0026#39;show\u0026#39;}) # r = requests.post(\u0026#34;http://124.237.76.85:59996/tl/l\u0026#34;, json={\u0026#39;AT\u0026#39;: event[\u0026#39;msg\u0026#39;][\u0026#39;at\u0026#39;],\u0026#39;IMEI\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;imei\u0026#39;],\u0026#39;type\u0026#39;: event[\u0026#39;msg\u0026#39;][\u0026#39;type\u0026#39;],\u0026#39;ds_id\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;ds_id\u0026#39;],\u0026#39;value\u0026#39;: event[\u0026#39;msg\u0026#39;][\u0026#39;value\u0026#39;],\u0026#39;dev_id\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;dev_id\u0026#39;],\u0026#39;msg_signature\u0026#39;: event[\u0026#39;msg_signature\u0026#39;],\u0026#39;nonce\u0026#39;:event[\u0026#39;nonce\u0026#39;]}) #测试云环境 r = requests.post(\u0026#34;http://54.222.237.18:9999/tl/l\u0026#34;, data={\u0026#39;AT\u0026#39;: str(event[\u0026#39;msg\u0026#39;][\u0026#39;at\u0026#39;]),\u0026#39;IMEI\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;imei\u0026#39;],\u0026#39;type\u0026#39;: event[\u0026#39;msg\u0026#39;][\u0026#39;type\u0026#39;],\u0026#39;ds_id\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;ds_id\u0026#39;],\u0026#39;value\u0026#39;: event[\u0026#39;msg\u0026#39;][\u0026#39;value\u0026#39;],\u0026#39;dev_id\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;dev_id\u0026#39;],\u0026#39;msg_signature\u0026#39;: event[\u0026#39;msg_signature\u0026#39;],\u0026#39;nonce\u0026#39;:event[\u0026#39;nonce\u0026#39;]}) #111测试环境水系统 #2023.2.6关闭测试 r = requests.post(\u0026#34;http://124.237.76.85:11914/gstNbCollect/nbWaterMessage\u0026#34;, json={\u0026#39;AT\u0026#39;:str(event[\u0026#39;msg\u0026#39;][\u0026#39;at\u0026#39;]),\u0026#39;imeiCode\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;imei\u0026#39;],\u0026#39;type\u0026#39;: event[\u0026#39;msg\u0026#39;][\u0026#39;type\u0026#39;],\u0026#39;ds_id\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;ds_id\u0026#39;],\u0026#39;value\u0026#39;: event[\u0026#39;msg\u0026#39;][\u0026#39;value\u0026#39;],\u0026#39;dev_id\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;dev_id\u0026#39;],\u0026#39;msg_signature\u0026#39;: event[\u0026#39;msg_signature\u0026#39;],\u0026#39;nonce\u0026#39;:event[\u0026#39;nonce\u0026#39;]}) #测试云环境 r = requests.post(\u0026#34;http://54.222.237.18:10914/kiddleNb/message\u0026#34;, json={\u0026#39;AT\u0026#39;:str(event[\u0026#39;msg\u0026#39;][\u0026#39;at\u0026#39;]),\u0026#39;imeiCode\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;imei\u0026#39;],\u0026#39;type\u0026#39;: event[\u0026#39;msg\u0026#39;][\u0026#39;type\u0026#39;],\u0026#39;ds_id\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;ds_id\u0026#39;],\u0026#39;value\u0026#39;: event[\u0026#39;msg\u0026#39;][\u0026#39;value\u0026#39;],\u0026#39;dev_id\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;dev_id\u0026#39;],\u0026#39;msg_signature\u0026#39;: event[\u0026#39;msg_signature\u0026#39;],\u0026#39;nonce\u0026#39;:event[\u0026#39;nonce\u0026#39;]}) #正式云环境（smart01） r = requests.post(\u0026#34;http://54.222.237.18:30914/kiddleNb/message\u0026#34;, json={\u0026#39;AT\u0026#39;:str(event[\u0026#39;msg\u0026#39;][\u0026#39;at\u0026#39;]),\u0026#39;imeiCode\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;imei\u0026#39;],\u0026#39;type\u0026#39;: event[\u0026#39;msg\u0026#39;][\u0026#39;type\u0026#39;],\u0026#39;ds_id\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;ds_id\u0026#39;],\u0026#39;value\u0026#39;: event[\u0026#39;msg\u0026#39;][\u0026#39;value\u0026#39;],\u0026#39;dev_id\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;dev_id\u0026#39;],\u0026#39;msg_signature\u0026#39;: event[\u0026#39;msg_signature\u0026#39;],\u0026#39;nonce\u0026#39;:event[\u0026#39;nonce\u0026#39;]}) r = requests.post(\u0026#34;http://54.222.237.18:10914/gstNbCollect/nbWaterMessage\u0026#34;, json={\u0026#39;AT\u0026#39;:str(event[\u0026#39;msg\u0026#39;][\u0026#39;at\u0026#39;]),\u0026#39;imeiCode\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;imei\u0026#39;],\u0026#39;type\u0026#39;: event[\u0026#39;msg\u0026#39;][\u0026#39;type\u0026#39;],\u0026#39;ds_id\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;ds_id\u0026#39;],\u0026#39;value\u0026#39;: event[\u0026#39;msg\u0026#39;][\u0026#39;value\u0026#39;],\u0026#39;dev_id\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;dev_id\u0026#39;],\u0026#39;msg_signature\u0026#39;: event[\u0026#39;msg_signature\u0026#39;],\u0026#39;nonce\u0026#39;:event[\u0026#39;nonce\u0026#39;]}) r = requests.post(\u0026#34;http://54.222.237.18:10914/gstNbCollect/nbSmokeMessage\u0026#34;, json={\u0026#39;AT\u0026#39;:str(event[\u0026#39;msg\u0026#39;][\u0026#39;at\u0026#39;]),\u0026#39;imeiCode\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;imei\u0026#39;],\u0026#39;type\u0026#39;: event[\u0026#39;msg\u0026#39;][\u0026#39;type\u0026#39;],\u0026#39;ds_id\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;ds_id\u0026#39;],\u0026#39;value\u0026#39;: event[\u0026#39;msg\u0026#39;][\u0026#39;value\u0026#39;],\u0026#39;dev_id\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;dev_id\u0026#39;],\u0026#39;msg_signature\u0026#39;: event[\u0026#39;msg_signature\u0026#39;],\u0026#39;nonce\u0026#39;:event[\u0026#39;nonce\u0026#39;]}) #正式云 2023.1.9 # r = requests.post(\u0026#34;http://52.83.127.198:10914/gstNbCollect/nbSmokeMessage\u0026#34;, json={\u0026#39;AT\u0026#39;:str(event[\u0026#39;msg\u0026#39;][\u0026#39;at\u0026#39;]),\u0026#39;imeiCode\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;imei\u0026#39;],\u0026#39;type\u0026#39;: event[\u0026#39;msg\u0026#39;][\u0026#39;type\u0026#39;],\u0026#39;ds_id\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;ds_id\u0026#39;],\u0026#39;value\u0026#39;: event[\u0026#39;msg\u0026#39;][\u0026#39;value\u0026#39;],\u0026#39;dev_id\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;dev_id\u0026#39;],\u0026#39;msg_signature\u0026#39;: event[\u0026#39;msg_signature\u0026#39;],\u0026#39;nonce\u0026#39;:event[\u0026#39;nonce\u0026#39;]}) # r = requests.post(\u0026#34;http://52.83.127.198:10914/kiddleNb/message\u0026#34;, json={\u0026#39;AT\u0026#39;:str(event[\u0026#39;msg\u0026#39;][\u0026#39;at\u0026#39;]),\u0026#39;imeiCode\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;imei\u0026#39;],\u0026#39;type\u0026#39;: event[\u0026#39;msg\u0026#39;][\u0026#39;type\u0026#39;],\u0026#39;ds_id\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;ds_id\u0026#39;],\u0026#39;value\u0026#39;: event[\u0026#39;msg\u0026#39;][\u0026#39;value\u0026#39;],\u0026#39;dev_id\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;dev_id\u0026#39;],\u0026#39;msg_signature\u0026#39;: event[\u0026#39;msg_signature\u0026#39;],\u0026#39;nonce\u0026#39;:event[\u0026#39;nonce\u0026#39;]}) #2023.2.1关闭 r = requests.post(\u0026#34;http://124.237.76.85:11914/gstNbCollect/nbSmokeMessage\u0026#34;, json={\u0026#39;AT\u0026#39;:str(event[\u0026#39;msg\u0026#39;][\u0026#39;at\u0026#39;]),\u0026#39;imeiCode\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;imei\u0026#39;],\u0026#39;type\u0026#39;: event[\u0026#39;msg\u0026#39;][\u0026#39;type\u0026#39;],\u0026#39;ds_id\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;ds_id\u0026#39;],\u0026#39;value\u0026#39;: event[\u0026#39;msg\u0026#39;][\u0026#39;value\u0026#39;],\u0026#39;dev_id\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;dev_id\u0026#39;],\u0026#39;msg_signature\u0026#39;: event[\u0026#39;msg_signature\u0026#39;],\u0026#39;nonce\u0026#39;:event[\u0026#39;nonce\u0026#39;]}) #1009静默注释 #2023.2.6关闭测试 r = requests.post(\u0026#34;http://124.237.76.85:18914/gstNbCollect/nbSmokeMessage\u0026#34;, json={\u0026#39;AT\u0026#39;:str(event[\u0026#39;msg\u0026#39;][\u0026#39;at\u0026#39;]),\u0026#39;imeiCode\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;imei\u0026#39;],\u0026#39;type\u0026#39;: event[\u0026#39;msg\u0026#39;][\u0026#39;type\u0026#39;],\u0026#39;ds_id\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;ds_id\u0026#39;],\u0026#39;value\u0026#39;: event[\u0026#39;msg\u0026#39;][\u0026#39;value\u0026#39;],\u0026#39;dev_id\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;dev_id\u0026#39;],\u0026#39;msg_signature\u0026#39;: event[\u0026#39;msg_signature\u0026#39;],\u0026#39;nonce\u0026#39;:event[\u0026#39;nonce\u0026#39;]}) #1009静默注释 #2023.2.6关闭测试 r = requests.post(\u0026#34;http://124.237.76.85:18914/kiddleNb/message\u0026#34;, json={\u0026#39;AT\u0026#39;:str(event[\u0026#39;msg\u0026#39;][\u0026#39;at\u0026#39;]),\u0026#39;imeiCode\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;imei\u0026#39;],\u0026#39;type\u0026#39;: event[\u0026#39;msg\u0026#39;][\u0026#39;type\u0026#39;],\u0026#39;ds_id\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;ds_id\u0026#39;],\u0026#39;value\u0026#39;: event[\u0026#39;msg\u0026#39;][\u0026#39;value\u0026#39;],\u0026#39;dev_id\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;dev_id\u0026#39;],\u0026#39;msg_signature\u0026#39;: event[\u0026#39;msg_signature\u0026#39;],\u0026#39;nonce\u0026#39;:event[\u0026#39;nonce\u0026#39;]}) #2023.2.6关闭测试 r = requests.post(\u0026#34;http://124.237.76.85:11914/kiddleNb/message\u0026#34;, json={\u0026#39;AT\u0026#39;:str(event[\u0026#39;msg\u0026#39;][\u0026#39;at\u0026#39;]),\u0026#39;imeiCode\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;imei\u0026#39;],\u0026#39;type\u0026#39;: event[\u0026#39;msg\u0026#39;][\u0026#39;type\u0026#39;],\u0026#39;ds_id\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;ds_id\u0026#39;],\u0026#39;value\u0026#39;: event[\u0026#39;msg\u0026#39;][\u0026#39;value\u0026#39;],\u0026#39;dev_id\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;dev_id\u0026#39;],\u0026#39;msg_signature\u0026#39;: event[\u0026#39;msg_signature\u0026#39;],\u0026#39;nonce\u0026#39;:event[\u0026#39;nonce\u0026#39;]}) #2023.2.6关闭测试 r = requests.post(\u0026#34;http://124.237.76.85:18914/gstNbCollect/nbWaterMessage\u0026#34;, json={\u0026#39;AT\u0026#39;:str(event[\u0026#39;msg\u0026#39;][\u0026#39;at\u0026#39;]),\u0026#39;imeiCode\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;imei\u0026#39;],\u0026#39;type\u0026#39;: event[\u0026#39;msg\u0026#39;][\u0026#39;type\u0026#39;],\u0026#39;ds_id\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;ds_id\u0026#39;],\u0026#39;value\u0026#39;: event[\u0026#39;msg\u0026#39;][\u0026#39;value\u0026#39;],\u0026#39;dev_id\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;dev_id\u0026#39;],\u0026#39;msg_signature\u0026#39;: event[\u0026#39;msg_signature\u0026#39;],\u0026#39;nonce\u0026#39;:event[\u0026#39;nonce\u0026#39;]}) #111测试环境 #2023.2.6关闭测试 r = requests.post(\u0026#34;http://124.237.76.85:11914/kiddleNb/message\u0026#34;, json={\u0026#39;AT\u0026#39;:str(event[\u0026#39;msg\u0026#39;][\u0026#39;at\u0026#39;]),\u0026#39;imeiCode\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;imei\u0026#39;],\u0026#39;type\u0026#39;: event[\u0026#39;msg\u0026#39;][\u0026#39;type\u0026#39;],\u0026#39;ds_id\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;ds_id\u0026#39;],\u0026#39;value\u0026#39;: event[\u0026#39;msg\u0026#39;][\u0026#39;value\u0026#39;],\u0026#39;dev_id\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;dev_id\u0026#39;],\u0026#39;msg_signature\u0026#39;: event[\u0026#39;msg_signature\u0026#39;],\u0026#39;nonce\u0026#39;:event[\u0026#39;nonce\u0026#39;]}) #print(r.status_code, r.reason) #print(r.text) print(\u0026#39;**************************--------------------------\u0026#39;) else: print(\u0026#39;**************************AEP\u0026#39;) #111测试环境 #r = requests.post(\u0026#34;http://124.237.76.85:11914/kiddleNb/message\u0026#34;, json={\u0026#39;AT\u0026#39;:str(event[\u0026#39;msg\u0026#39;][\u0026#39;at\u0026#39;]),\u0026#39;imeiCode\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;imei\u0026#39;],\u0026#39;type\u0026#39;: event[\u0026#39;msg\u0026#39;][\u0026#39;type\u0026#39;],\u0026#39;ds_id\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;ds_id\u0026#39;],\u0026#39;value\u0026#39;: event[\u0026#39;msg\u0026#39;][\u0026#39;value\u0026#39;],\u0026#39;dev_id\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;dev_id\u0026#39;],\u0026#39;msg_signature\u0026#39;: event[\u0026#39;msg_signature\u0026#39;],\u0026#39;nonce\u0026#39;:event[\u0026#39;nonce\u0026#39;]}) #测试云环境 #1011注释 r = requests.post(\u0026#34;http://54.222.237.18:30914/kiddleNb/message\u0026#34;, json={\u0026#39;AT\u0026#39;:str(event[\u0026#39;timestamp\u0026#39;]),\u0026#39;imeiCode\u0026#39;:event[\u0026#39;IMEI\u0026#39;],\u0026#39;value\u0026#39;: event[\u0026#39;payload\u0026#39;][\u0026#39;APPdata\u0026#39;],\u0026#39;dev_id\u0026#39;:event[\u0026#39;deviceId\u0026#39;],\u0026#39;is_onenet\u0026#39;: str(is_onenet)}) #1011注释 # r = requests.post(\u0026#34;http://54.222.237.18:10914/gstNbCollect/nbSmokeMessage\u0026#34;, json={\u0026#39;AT\u0026#39;:str(event[\u0026#39;timestamp\u0026#39;]),\u0026#39;imeiCode\u0026#39;:event[\u0026#39;IMEI\u0026#39;],\u0026#39;value\u0026#39;: event[\u0026#39;payload\u0026#39;][\u0026#39;APPdata\u0026#39;],\u0026#39;dev_id\u0026#39;:event[\u0026#39;deviceId\u0026#39;],\u0026#39;is_onenet\u0026#39;: str(is_onenet)}) #正式云 #r = requests.post(\u0026#34;http://52.83.127.198:10914/gstNbCollect/nbSmokeMessage\u0026#34;, json={\u0026#39;AT\u0026#39;:str(event[\u0026#39;msg\u0026#39;][\u0026#39;at\u0026#39;]),\u0026#39;imeiCode\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;imei\u0026#39;],\u0026#39;type\u0026#39;: event[\u0026#39;msg\u0026#39;][\u0026#39;type\u0026#39;],\u0026#39;ds_id\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;ds_id\u0026#39;],\u0026#39;value\u0026#39;: event[\u0026#39;msg\u0026#39;][\u0026#39;value\u0026#39;],\u0026#39;dev_id\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;dev_id\u0026#39;],\u0026#39;msg_signature\u0026#39;: event[\u0026#39;msg_signature\u0026#39;],\u0026#39;nonce\u0026#39;:event[\u0026#39;nonce\u0026#39;]}) #r = requests.post(\u0026#34;http://52.83.127.198:10914/kiddleNb/message\u0026#34;, json={\u0026#39;AT\u0026#39;:str(event[\u0026#39;msg\u0026#39;][\u0026#39;at\u0026#39;]),\u0026#39;imeiCode\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;imei\u0026#39;],\u0026#39;type\u0026#39;: event[\u0026#39;msg\u0026#39;][\u0026#39;type\u0026#39;],\u0026#39;ds_id\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;ds_id\u0026#39;],\u0026#39;value\u0026#39;: event[\u0026#39;msg\u0026#39;][\u0026#39;value\u0026#39;],\u0026#39;dev_id\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;dev_id\u0026#39;],\u0026#39;msg_signature\u0026#39;: event[\u0026#39;msg_signature\u0026#39;],\u0026#39;nonce\u0026#39;:event[\u0026#39;nonce\u0026#39;]}) #1011注释 # r = requests.post(\u0026#34;http://124.237.76.85:11914/gstNbCollect/nbSmokeMessage\u0026#34;, json={\u0026#39;AT\u0026#39;:str(event[\u0026#39;timestamp\u0026#39;]),\u0026#39;imeiCode\u0026#39;:event[\u0026#39;IMEI\u0026#39;],\u0026#39;value\u0026#39;: event[\u0026#39;payload\u0026#39;][\u0026#39;APPdata\u0026#39;],\u0026#39;dev_id\u0026#39;:event[\u0026#39;deviceId\u0026#39;],\u0026#39;is_onenet\u0026#39;: str(is_onenet)}) #1009静默注释 #r = requests.post(\u0026#34;http://124.237.76.85:18914/gstNbCollect/nbSmokeMessage\u0026#34;, json={\u0026#39;AT\u0026#39;:str(event[\u0026#39;timestamp\u0026#39;]),\u0026#39;imeiCode\u0026#39;:event[\u0026#39;IMEI\u0026#39;],\u0026#39;value\u0026#39;: event[\u0026#39;payload\u0026#39;][\u0026#39;APPdata\u0026#39;],\u0026#39;dev_id\u0026#39;:event[\u0026#39;deviceId\u0026#39;],\u0026#39;is_onenet\u0026#39;: str(is_onenet)}) #1009静默注释 #r = requests.post(\u0026#34;http://124.237.76.85:18914/kiddleNb/message\u0026#34;, json={\u0026#39;AT\u0026#39;:str(event[\u0026#39;timestamp\u0026#39;]),\u0026#39;imeiCode\u0026#39;:event[\u0026#39;IMEI\u0026#39;],\u0026#39;value\u0026#39;: event[\u0026#39;payload\u0026#39;][\u0026#39;APPdata\u0026#39;],\u0026#39;dev_id\u0026#39;:event[\u0026#39;deviceId\u0026#39;],\u0026#39;is_onenet\u0026#39;: str(is_onenet)}) print(\u0026#39;*************************** push to 111 server START\u0026#39;) #2023.2.6关闭测试 r = requests.post(\u0026#34;http://124.237.76.85:11914/kiddleNb/message\u0026#34;, json={\u0026#39;AT\u0026#39;:str(event[\u0026#39;timestamp\u0026#39;]),\u0026#39;imeiCode\u0026#39;:event[\u0026#39;IMEI\u0026#39;],\u0026#39;value\u0026#39;: event[\u0026#39;payload\u0026#39;][\u0026#39;APPdata\u0026#39;],\u0026#39;dev_id\u0026#39;:event[\u0026#39;deviceId\u0026#39;],\u0026#39;is_onenet\u0026#39;: str(is_onenet)}) print(\u0026#39;*************************** push to 111 server END\u0026#39;) returnCode=\u0026#34;123mytoken1121\u0026#34; print(\u0026#39;hello1\u0026#39;) # if __name__ == \u0026#39;__main__\u0026#39;: # app.run(host = \u0026#39;127.0.0.1\u0026#39; ,port = 5555, debug = 0) #运行app 判断lambda调用来源\nfunction getLambdaEventSource(event) {\u0026lt;br /\u0026gt; if (event.Records \u0026amp;\u0026amp; event.Records[0].cf) return \u0026#39;isCloudfront\u0026#39;;\u0026lt;br /\u0026gt; if (event.configRuleId \u0026amp;\u0026amp; event.configRuleName \u0026amp;\u0026amp; event.configRuleArn) return \u0026#39;isAwsConfig\u0026#39;;\u0026lt;br /\u0026gt; if (event.Records \u0026amp;\u0026amp; (event.Records[0].eventSource === \u0026#39;aws:codecommit\u0026#39;)) return \u0026#39;isCodeCommit\u0026#39;;\u0026lt;br /\u0026gt; if (event.authorizationToken === \u0026#34;incoming-client-token\u0026#34;) return \u0026#39;isApiGatewayAuthorizer\u0026#39;;\u0026lt;br /\u0026gt; if (event.StackId \u0026amp;\u0026amp; event.RequestType \u0026amp;\u0026amp; event.ResourceType) return \u0026#39;isCloudFormation\u0026#39;;\u0026lt;br /\u0026gt; if (event.Records \u0026amp;\u0026amp; (event.Records[0].eventSource === \u0026#39;aws:ses\u0026#39;)) return \u0026#39;isSes\u0026#39;;\u0026lt;br /\u0026gt; if (event.pathParameters \u0026amp;\u0026amp; event.pathParameters.proxy) return \u0026#39;isApiGatewayAwsProxy\u0026#39;;\u0026lt;br /\u0026gt; if (event.source === \u0026#39;aws.events\u0026#39;) return \u0026#39;isScheduledEvent\u0026#39;;\u0026lt;br /\u0026gt; if (event.awslogs \u0026amp;\u0026amp; event.awslogs.data) return \u0026#39;isCloudWatchLogs\u0026#39;;\u0026lt;br /\u0026gt; if (event.Records \u0026amp;\u0026amp; (event.Records[0].EventSource === \u0026#39;aws:sns\u0026#39;)) return \u0026#39;isSns\u0026#39;;\u0026lt;br /\u0026gt; if (event.Records \u0026amp;\u0026amp; (event.Records[0].eventSource === \u0026#39;aws:dynamodb\u0026#39;)) return \u0026#39;isDynamoDb\u0026#39;;\u0026lt;br /\u0026gt; if (event.records \u0026amp;\u0026amp; event.records[0].approximateArrivalTimestamp) return \u0026#39;isKinesisFirehose\u0026#39;;\u0026lt;br /\u0026gt; if (event.records \u0026amp;\u0026amp; event.deliveryStreamArn \u0026amp;\u0026amp; event.deliveryStreamArn.startsWith(\u0026#39;arn:aws:kinesis:\u0026#39;)) return \u0026#39;isKinesisFirehose\u0026#39;;\u0026lt;br /\u0026gt; if (event.eventType === \u0026#39;SyncTrigger\u0026#39; \u0026amp;\u0026amp; event.identityId \u0026amp;\u0026amp; event.identityPoolId) return \u0026#39;isCognitoSyncTrigger\u0026#39;;\u0026lt;br /\u0026gt; if (event.Records \u0026amp;\u0026amp; event.Records[0].eventSource === \u0026#39;aws:kinesis\u0026#39;) return \u0026#39;isKinesis\u0026#39;;\u0026lt;br /\u0026gt; if (event.Records \u0026amp;\u0026amp; event.Records[0].eventSource === \u0026#39;aws:s3\u0026#39;) return \u0026#39;isS3\u0026#39;;\u0026lt;br /\u0026gt; if (event.operation \u0026amp;\u0026amp; event.message) return \u0026#39;isMobileBackend\u0026#39;;\u0026lt;br /\u0026gt;} 生成需要的requirements.txt** conda list -e \u0026gt; requirements.txt**\n线下版FlaskLambdaNb改动 # GstNb.py 中修改 import os import sys curPath = os.path.abspath(os.path.dirname(__file__)) sys.path.append(curPath) # 修改时区 timedelta(hours=8) 改为 timedelta(hours=0) # 修改转发路径 def send(self): self.try_send(self.local_url[0], self.local_url[1], \u0026#39;nbHomePanel\u0026#39;) pass # 不同环境 需要修改 local_url = (\u0026#34;127.0.0.1\u0026#34;, \u0026#34;9014\u0026#34;) lambda线下部署安装部署 # install01_python3.8.sh #!/bin/bash # 1. Update yum packages #sudo yum update -y # 2. Install dependencies sudo yum install gcc openssl-devel bzip2-devel libffi-devel libsqlite3-devel -y # 3. Download Python3.8 source code # wget https://www.python.org/ftp/python/3.8.16/Python-3.8.16.tgz tar xvf Python-3.8.16.tgz # 4. Compile and install Python3.8 cd Python-3.8.16 make clean #./configure --enable-optimizations --prefix=/usr/local/python3 --with-ssl ./configure --prefix=/usr/local/python3 --with-ssl make -j 4 sudo make install ln -s /usr/local/python3/bin/python3.8 /usr/bin/python3 ln -s /usr/local/python3/bin/pip3.8 /usr/bin/pip3 echo \u0026#39;export PATH=$PATH:/usr/local/python3/bin\u0026#39; \u0026gt;\u0026gt; /etc/profile source /etc/profile # 5. Verify the installation python3 --version pip3 -V echo \u0026#34;===================请校验版本号=========================\u0026#34; echo \u0026#34;===================准备升级pip=========================\u0026#34; /usr/local/python3/bin/python3.8 -m pip install --upgrade pip pip3 install gunicorn pip3 install gevent echo \u0026#34;===================安装完成=========================\u0026#34; cd .. rm -rf Python-3.8.16 echo \u0026#34;===================清理解压文件Python-3.8.16完成=========================\u0026#34; # install02_FlaskLambdaNb.sh #!/bin/bash baseDir=/home/gst unzip -d $baseDir FlaskLambdaNb.zip cp ./start.sh $baseDir/FlaskLambdaNb cp ./stop.sh $baseDir/FlaskLambdaNb cd $baseDir/FlaskLambdaNb mkdir log chmod +777 start.sh chmod +777 stop.sh echo \u0026#34;===============准备启动===================\u0026#34; sh start.sh echo \u0026#34;===============启动完成===================\u0026#34; 1. 代码记录 alerttype新增项 insert into gstdb.dev_alert_type (ID, CLASS_CODE, CLASS_NAME, TYPE_CODE, TYPE_NAME, OUT_CODE, INF_CODE, PRIV_CODE, COLOR_CODE, PIC_PATH, DEAL_TYPE, PRIORITY_LV, SYS_TYPE, PLAY_LV, VOICE_FILE, IS_SMS_ALERT, PLAY_TIMES, WIN_TITLE, WIN_CONTENT, VIDEO_ALERT) values (601, \u0026#39;ALARM\u0026#39;, null, \u0026#39;nweplar\u0026#39;, \u0026#39;传感器低限报警恢复\u0026#39;, \u0026#39;NB_WATER_ALARM\u0026#39;, \u0026#39;DEV\u0026#39;, null, \u0026#39;#ea7500\u0026#39;, \u0026#39;fa fa-warning\u0026#39;, \u0026#39;ALARM\u0026#39;, null, null, 999, \u0026#39;/fireProj/src/controller/remotemonitor/emergencyhandling/voc/dk.mp3\u0026#39;, null, -1, null, null, 0), (602, \u0026#39;ALARM\u0026#39;, null, \u0026#39;nwephar\u0026#39;, \u0026#39;传感器高限报警恢复\u0026#39;, \u0026#39;NB_WATER_ALARM\u0026#39;, \u0026#39;DEV\u0026#39;, null, \u0026#39;#ea7500\u0026#39;, \u0026#39;fa fa-warning\u0026#39;, \u0026#39;ALARM\u0026#39;, null, null, 999, \u0026#39;/fireProj/src/controller/remotemonitor/emergencyhandling/voc/dk.mp3\u0026#39;, null, -1, null, null, 0), (603, \u0026#39;FAULT\u0026#39;, null, \u0026#39;nwepsenfr\u0026#39;, \u0026#39;传感器故障恢复\u0026#39;, \u0026#39;NB_WATER_ALARM\u0026#39;, \u0026#39;DEV\u0026#39;, null, \u0026#39;#f39b26\u0026#39;, \u0026#39;fa fa-warning\u0026#39;, \u0026#39;FAULT\u0026#39;, null, null, 99, \u0026#39;/fireProj/src/controller/remotemonitor/emergencyhandling/voc/gzxx.mp3\u0026#39;, null, -1, null, null, 0), (604, \u0026#39;FAULT\u0026#39;, null, \u0026#39;nwepblr\u0026#39;, \u0026#39;欠压故障恢复\u0026#39;, \u0026#39;NB_WATER_ALARM\u0026#39;, \u0026#39;DEV\u0026#39;, null, \u0026#39;#f39b26\u0026#39;, \u0026#39;fa fa-warning\u0026#39;, \u0026#39;FAULT\u0026#39;, null, null, 99, \u0026#39;/fireProj/src/controller/remotemonitor/emergencyhandling/voc/gzxx.mp3\u0026#39;, null, -1, null, null, 0), (605, \u0026#39;FAULT\u0026#39;, null, \u0026#39;nwepgatefr\u0026#39;, \u0026#39;传感器网关故障恢复\u0026#39;, \u0026#39;NB_WATER_ALARM\u0026#39;, \u0026#39;DEV\u0026#39;, null, \u0026#39;#f39b26\u0026#39;, \u0026#39;fa fa-warning\u0026#39;, \u0026#39;FAULT\u0026#39;, null, null, 99, \u0026#39;/fireProj/src/controller/remotemonitor/emergencyhandling/voc/gzxx.mp3\u0026#39;, null, -1, null, null, 0); -- 新增4G水设备 insert into gstdb.d_dev_type (MANU_ID, TYPE_ID, DEV_TYPE_NAME, DEV_TYPE_CODE, DEV_TYPE, SUB_SYS_TYPE, PIC_URL, REMARK, REF_TABLE_NAME) values (null, 311, \u0026#39;NB压力表S270\u0026#39;, \u0026#39;MD-S270\u0026#39;, \u0026#39;MD-S270\u0026#39;, null, \u0026#39;/fireProj/src/style/icon/icon_pmt_mh.png\u0026#39;, null, \u0026#39;d_device\u0026#39;), (null, 312, \u0026#39;NB液位表S270L\u0026#39;, \u0026#39;MD-S270L\u0026#39;, \u0026#39;MD-S270L\u0026#39;, null, \u0026#39;/fireProj/src/style/icon/icon_pmt_mh.png\u0026#39;, null, \u0026#39;d_device\u0026#39;); cloudwatch使用 -- 查询aep离线消息 cloudwatch fields @timestamp, @message, @logStream, @log | sort @timestamp desc | filter @message like /deviceOnlineOfflineReport/ | filter @message like /\\\\\u0026#34;eventType\\\\\u0026#34;:0/ | limit 20 postman测试离线消息 // 电信离线消息 curl --location --request POST \u0026#39;https://bqr56sktqc.execute-api.cn-north-1.amazonaws.com.cn/dev-230307-api/nb/homePanel\u0026#39; \\ --header \u0026#39;Content-Type: application/json\u0026#39; \\ --data \u0026#39;{ \u0026#34;timestamp\u0026#34;: 1683333154692, \u0026#34;tenantId\u0026#34;: \u0026#34;2000121082\u0026#34;, \u0026#34;protocol\u0026#34;: \u0026#34;lwm2m\u0026#34;, \u0026#34;productId\u0026#34;: \u0026#34;15599935\u0026#34;, \u0026#34;messageType\u0026#34;: \u0026#34;deviceOnlineOfflineReport\u0026#34;, \u0026#34;eventType\u0026#34;: 0, \u0026#34;deviceId\u0026#34;: \u0026#34;070b11774fe44fbbaf7dc6a45ec6b8c0\u0026#34;, \u0026#34;imei\u0026#34;: \u0026#34;869597066902292\u0026#34; }\u0026#39; // onenet离线消息 curl --location --request POST \u0026#39;https://bqr56sktqc.execute-api.cn-north-1.amazonaws.com.cn/dev-230307-api/nb/waterPressure\u0026#39; \\ --header \u0026#39;Content-Type: application/json\u0026#39; \\ --data \u0026#39;{ \u0026#34;msg\u0026#34;: { \u0026#34;at\u0026#34;: 1684376666440, \u0026#34;login_type\u0026#34;: 10, \u0026#34;imei\u0026#34;: \u0026#34;869975032012240\u0026#34;, \u0026#34;type\u0026#34;: 2, \u0026#34;dev_id\u0026#34;: 1019149894, \u0026#34;status\u0026#34;: 0 }, \u0026#34;msg_signature\u0026#34;: \u0026#34;DsuhvMGts52FWlFFKB7aHg==\u0026#34;, \u0026#34;nonce\u0026#34;: \u0026#34;PMeR6prt\u0026#34; }\u0026#39; 2. ApiGateWay 记录 n900Pro(b2c 烟)、气感 smoke https://bqr56sktqc.execute-api.cn-north-1.amazonaws.com.cn/dev-230307-api/nb/smoke 液压、液位 waterPressure https://bqr56sktqc.execute-api.cn-north-1.amazonaws.com.cn/dev-230307-api/nb/waterPressure 单相电 singleElec https://bqr56sktqc.execute-api.cn-north-1.amazonaws.com.cn/dev-230307-api/nb/singleElec 防爆水 https://bqr56sktqc.execute-api.cn-north-1.amazonaws.com.cn/dev-230307-api/nb/waterExplosion 家用控制器 JA-2200 https://bqr56sktqc.execute-api.cn-north-1.amazonaws.com.cn/dev-230307-api/nb/homePanel N900 https://bqr56sktqc.execute-api.cn-north-1.amazonaws.com.cn/dev-230307-api/nb/N900 老的 https://bqr56sktqc.execute-api.cn-north-1.amazonaws.com.cn/0414_1606/ 铭控液压MD-S270 https://bqr56sktqc.execute-api.cn-north-1.amazonaws.com.cn/dev-230307-api/nb/MDS270 铭控液位MDS270L https://bqr56sktqc.execute-api.cn-north-1.amazonaws.com.cn/dev-230307-api/nb/MDS270L 3. 基础逻辑流程 判定来源（不同的apigateway）水 电 感烟 气 判定设备类型 （连数据库，url参数带） 确定type 根据类型解析协议 结果JSON 抽象不同环境 try catch 调用 -- nb_transmit_conf: table CREATE TABLE `nb_transmit_conf` ( `id` int(11) NOT NULL AUTO_INCREMENT, `NB_COM_ID` int(11) NOT NULL COMMENT \u0026#39;运营平台id\u0026#39;, `protocol` varchar(50) COLLATE utf8mb4_bin NOT NULL COMMENT \u0026#39;数据转换协议 TransmitLocalDeploy:本地部署 UnifyPushDataNB:对外推送 YiChangXiaoFang:宜昌消防 \u0026#39;, `url` varchar(255) COLLATE utf8mb4_bin NOT NULL COMMENT \u0026#39;推送地址\u0026#39;, `remark` varchar(255) COLLATE utf8mb4_bin DEFAULT NULL, PRIMARY KEY (`id`), UNIQUE KEY `unq_push_url` (`NB_COM_ID`, `protocol`, `url`) ) ENGINE = InnoDB AUTO_INCREMENT = 9 DEFAULT CHARSET = utf8mb4 COLLATE = utf8mb4_bin COMMENT =\u0026#39;nb数据转发表\u0026#39;; ","permalink":"https://blog.juanliu.top/nblambda-rms%E4%B8%9A%E5%8A%A1/","summary":"import requests import urllib from urllib import parse from flask import Flask, request,jsonify #import urllib.request # app=Flask(__name__) #初始化app # @app.route(\u0026#39;/\u0026#39;,methods=[\u0026#39;GET\u0026#39;, \u0026#39;POST\u0026#39;]) #建立路由 def handler(event, context): print(\u0026#34;mmmmmmmmmmmmmmmmmmmmmmmmmmm\u0026#34;) print(event) print(\u0026#39;mmmmmmmmmmmmmmmmmmmmmmmmmmm\u0026#39;) # if request.method == \u0026#39;GET\u0026#39;: # msg = request.args.get(\u0026#39;msg\u0026#39;) # print(msg) print(event) print(\u0026#39;--------------------------\u0026#39;) rev_lst = [] for v in event.keys(): rev_lst.append(v) if \u0026#39;payload\u0026#39; in rev_lst: is_onenet = 0 else: is_onenet = 1 if is_onenet == 1: print(\u0026#34;本次应发送post请求\u0026#34;) # r = requests.post(\u0026#34;http://124.237.76.85:59996/tl/l\u0026#34;, data={\u0026#39;number\u0026#39;: event[\u0026#39;key1\u0026#39;], \u0026#39;type\u0026#39;: event[\u0026#39;key2\u0026#39;], \u0026#39;action\u0026#39;: \u0026#39;show\u0026#39;}) # r = requests.post(\u0026#34;http://124.237.76.85:59996/tl/l\u0026#34;, json={\u0026#39;AT\u0026#39;: event[\u0026#39;msg\u0026#39;][\u0026#39;at\u0026#39;],\u0026#39;IMEI\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;imei\u0026#39;],\u0026#39;type\u0026#39;: event[\u0026#39;msg\u0026#39;][\u0026#39;type\u0026#39;],\u0026#39;ds_id\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;ds_id\u0026#39;],\u0026#39;value\u0026#39;: event[\u0026#39;msg\u0026#39;][\u0026#39;value\u0026#39;],\u0026#39;dev_id\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;dev_id\u0026#39;],\u0026#39;msg_signature\u0026#39;: event[\u0026#39;msg_signature\u0026#39;],\u0026#39;nonce\u0026#39;:event[\u0026#39;nonce\u0026#39;]}) #测试云环境 r = requests.post(\u0026#34;http://54.222.237.18:9999/tl/l\u0026#34;, data={\u0026#39;AT\u0026#39;: str(event[\u0026#39;msg\u0026#39;][\u0026#39;at\u0026#39;]),\u0026#39;IMEI\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;imei\u0026#39;],\u0026#39;type\u0026#39;: event[\u0026#39;msg\u0026#39;][\u0026#39;type\u0026#39;],\u0026#39;ds_id\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;ds_id\u0026#39;],\u0026#39;value\u0026#39;: event[\u0026#39;msg\u0026#39;][\u0026#39;value\u0026#39;],\u0026#39;dev_id\u0026#39;:event[\u0026#39;msg\u0026#39;][\u0026#39;dev_id\u0026#39;],\u0026#39;msg_signature\u0026#39;: event[\u0026#39;msg_signature\u0026#39;],\u0026#39;nonce\u0026#39;:event[\u0026#39;nonce\u0026#39;]}) #111测","title":""}]